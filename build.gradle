
buildscript {
  repositories { mavenCentral() }

  dependencies { classpath 'com.github.ben-manes:gradle-versions-plugin:0.3' }
}

allprojects{
  apply plugin: 'eclipse'
  apply plugin: 'eclipse-wtp'

  ext{
    springVersion = "3.2.2.RELEASE"
    slf4jVersion = "1.7.2"
  }

  version = '1.0'
}

subprojects{
  apply plugin: 'java'
  apply plugin: 'versions'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  group = 'org.raziskovalec'

  repositories {  mavenCentral() }

  configurations{
    all*.exclude (module: 'commons-logging')
  }

  dependencies{
    compile (group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion)
    compile (group: 'com.google.guava', name: 'guava', version: '14.0')
    compile (group: 'joda-time', name: 'joda-time', version: '2.1')

    testCompile (group: 'org.testng', name: 'testng', version: '6.8'){ exclude (module: 'hamcrest-core') }
    testCompile (group: 'org.mockito', name: 'mockito-all', version: '1.9.5')
    testCompile (group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3')
  }

  test{
    useTestNG()
    scanForTestClasses  = false
    options.suiteXmlFiles = [
      file('src/test/resources/testng.yaml')
    ]
  }

  eclipse {
    classpath{
      downloadSources = true
      downloadJavadoc = true
      file{
        // dodano ker Web App Libraries skrije source
        // ti so za libraries shranjene v workspacu
        withXml { xml ->
          def node = xml.asNode()
          def container = node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' };
          if(container != null){
            node.remove( container )
            node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
          }
        }
      }
    }
  }
}

project('raziskovalec-web'){
  apply plugin: 'war'

  dependencies{
    runtime (group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.9')
    compile (group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion)


    compile (group: 'org.springframework', name: 'spring-core', version: springVersion)
    compile (group: 'org.springframework', name: 'spring-context', version: springVersion)
    compile (group: 'org.springframework', name: 'spring-web', version: springVersion)
    compile (group: 'org.springframework', name: 'spring-webmvc', version: springVersion)
    compile (group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.1.Final')

    compile (group: 'org.thymeleaf', name: 'thymeleaf', version: '2.0.16')
    compile (group: 'org.thymeleaf', name: 'thymeleaf-spring3', version: '2.0.16')
    compile (group: 'nz.net.ultraq.web.thymeleaf', name: 'thymeleaf-layout-dialect', version: '1.0.6')
    compile (group: 'org.webjars', name: 'bootstrap', version: '2.3.0')
    compile (group: 'org.webjars', name: 'modernizr', version: '2.6.2-1')
    compile (group: 'org.webjars', name: 'jquery', version: '1.9.1')
    compile (group: 'org.webjars', name: 'font-awesome', version: '3.0.0')

    compile (group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxrs', version: '2.7.3')
    compile (group: 'org.apache.cxf', name: 'cxf-rt-rs-extension-providers', version: '2.7.3')
    compile (group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version: '1.9.11')

    compile project(':raziskovalec-domain')

    providedCompile (group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1')
  }

  eclipse{
    project{
      linkedResource name: 'webapp', type: '2', locationUri: 'PROJECT_LOC/src/main/webapp'
    }
  }
}

project('raziskovalec-services'){
  apply plugin: 'war'

  dependencies{
    runtime (group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.9')
    compile (group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion)

    compile (group: 'org.springframework', name: 'spring-core', version: springVersion)
    compile (group: 'org.springframework', name: 'spring-context', version: springVersion)
    compile (group: 'org.springframework', name: 'spring-web', version: springVersion)
    compile (group: 'org.springframework', name: 'spring-orm', version: springVersion)
    
    compile (group: 'org.hibernate', name: 'hibernate-core', version: '4.2.1.Final')
    compile (group: 'org.jadira.usertype', name:'usertype.core', version: '3.1.0.CR6')

    compile (group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxrs', version: '2.7.3')
    compile (group: 'org.apache.cxf', name: 'cxf-rt-rs-extension-providers', version: '2.7.3')
    compile (group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version: '1.9.11')

    compile (group: 'com.jolbox', name: 'bonecp', version: '0.8.0-rc1')
    compile (group: 'org.hsqldb', name: 'hsqldb', version: '2.2.9')

    compile project(':raziskovalec-domain')

    providedCompile (group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1')
  }
}

project('raziskovalec-util'){

  dependencies{
    compile (group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.12')
  }
}

project('raziskovalec-domain'){

  dependencies{
    compile (group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.12')
    compile (group: 'org.hibernate', name: 'hibernate-core', version: '4.2.1.Final')

    compile project(':raziskovalec-util')
  }
}

configure(rootProject){

  task docs(type: Javadoc) {
    source subprojects.collect {project -> project.sourceSets.main.allJava }
    classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath})
    destinationDir = new File(project.buildDir, 'docs/javadoc')

    options.linkSource = true
    options.author = true
    options.overview = 'src/main/javadoc/overview.html'
    options.docTitle = 'raziskovalec.org'
    options.links(
        'http://download.oracle.com/javase/7/docs/api/',
        'http://static.springsource.org/spring/docs/3.1.x/javadoc-api/',
        'http://java.sun.com/javaee/6/docs/api/',
        'http://www.slf4j.org/apidocs/',
        'http://docs.jboss.org/hibernate/core/3.6/javadocs/',
        'http://joda-time.sourceforge.net/api-release/',
        'http://docs.guava-libraries.googlecode.com/git-history/v10.0/javadoc/',
        'http://cxf.apache.org/javadoc/latest/',
        'http://commons.apache.org/lang/api-release/'
        )
    options.group('Raziskovalec web', 'org.raziskovalec.web*')
    options.group('Raziskovalec services', 'org.raziskovalec.services*')
    options.group('Raziskovalec domain', 'org.raziskovalec.domain*')
    options.group('Raziskovalec util', 'org.raziskovalec.base*')
  }

  task docsZip(type: Zip) {
    baseName = "raziskovalec"
    classifier = "docs"
    description = "Raziskovalec documentation"
    destinationDir = new File(project.buildDir, 'dist')

    from (docs)
  }

  task binZip(type: Zip){
    baseName = "raziskovalec"
    classifier = "bin"
    description = "Raziskovalec binnary"
    destinationDir = new File(project.buildDir, 'dist')

    from project(':raziskovalec-web').war.outputs.files
    from project(':raziskovalec-services').war.outputs.files
  }

  task distZip(type: Zip, dependsOn: [docsZip, binZip]){
    baseName = "raziskovalec"
    classifier = "dist"
    description = "Raziskovalec distribution"
    destinationDir = new File(project.buildDir, 'dist')

    from(zipTree(docsZip.archivePath)) { into "docs" }

    from(zipTree(binZip.archivePath)) { into "bin" }
  }

  task clean(type: Delete){ delete 'build' }

  task wrapper(type: Wrapper) { gradleVersion = "1.6" }
}